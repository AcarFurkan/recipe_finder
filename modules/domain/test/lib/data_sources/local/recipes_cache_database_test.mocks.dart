// Mocks generated by Mockito 5.4.0 from annotations
// in domain/test/lib/data_sources/local/recipes_cache_database_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:domain/data_sources/local/recipes_cache_database.dart' as _i2;
import 'package:domain/models/recipe_entity/recipe_entity.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RecipesCacheDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipesCacheDatabase extends _i1.Mock
    implements _i2.RecipesCacheDatabase {
  MockRecipesCacheDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Iterable<_i4.RecipeEntity>> getRecipes() => (super.noSuchMethod(
        Invocation.method(
          #getRecipes,
          [],
        ),
        returnValue:
            _i3.Future<Iterable<_i4.RecipeEntity>>.value(<_i4.RecipeEntity>[]),
      ) as _i3.Future<Iterable<_i4.RecipeEntity>>);
  @override
  _i3.Future<void> cacheRecipes(Iterable<_i4.RecipeEntity>? recipes) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheRecipes,
          [recipes],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [RecipeEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeEntity extends _i1.Mock implements _i4.RecipeEntity {
  MockRecipeEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  String get imageUrl => (super.noSuchMethod(
        Invocation.getter(#imageUrl),
        returnValue: '',
      ) as String);
  @override
  List<String> get ingredients => (super.noSuchMethod(
        Invocation.getter(#ingredients),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<String> get ingredientLines => (super.noSuchMethod(
        Invocation.getter(#ingredientLines),
        returnValue: <String>[],
      ) as List<String>);
  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: '',
      ) as String);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
